{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "4f8e783e18fdd70a3d75e06aa4fc6e1e",
    "entities": [
      {
        "tableName": "users",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `username` TEXT NOT NULL, `email` TEXT NOT NULL, `phoneNumber` TEXT, `password` TEXT NOT NULL, `avatarUrl` TEXT, `status` TEXT NOT NULL, `totalRides` INTEGER NOT NULL, `totalDistance` REAL NOT NULL, `totalRideTime` INTEGER NOT NULL, `last_login_at` INTEGER, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "phoneNumber",
            "columnName": "phoneNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "password",
            "columnName": "password",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "avatarUrl",
            "columnName": "avatarUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "totalRides",
            "columnName": "totalRides",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalDistance",
            "columnName": "totalDistance",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalRideTime",
            "columnName": "totalRideTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastLoginAt",
            "columnName": "last_login_at",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "user_settings",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `isDarkMode` INTEGER NOT NULL, `isNotificationEnabled` INTEGER NOT NULL, `language` TEXT NOT NULL, `showDistance` INTEGER NOT NULL, PRIMARY KEY(`userId`), FOREIGN KEY(`userId`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isDarkMode",
            "columnName": "isDarkMode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isNotificationEnabled",
            "columnName": "isNotificationEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "language",
            "columnName": "language",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "showDistance",
            "columnName": "showDistance",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "achievements",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT NOT NULL, `description` TEXT NOT NULL, `type` TEXT NOT NULL, `requirement` REAL NOT NULL, `resourceId` INTEGER NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "requirement",
            "columnName": "requirement",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "resourceId",
            "columnName": "resourceId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "user_achievements",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `userId` TEXT NOT NULL, `achievementId` TEXT NOT NULL, `unlockedAt` INTEGER NOT NULL, `progress` REAL NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, FOREIGN KEY(`userId`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`achievementId`) REFERENCES `achievements`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "achievementId",
            "columnName": "achievementId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "unlockedAt",
            "columnName": "unlockedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "progress",
            "columnName": "progress",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_user_achievements_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_user_achievements_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_user_achievements_achievementId",
            "unique": false,
            "columnNames": [
              "achievementId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_user_achievements_achievementId` ON `${TABLE_NAME}` (`achievementId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "achievements",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "achievementId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "user_displayed_achievements",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `userId` TEXT NOT NULL, `achievementId` TEXT NOT NULL, `displayOrder` INTEGER NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, FOREIGN KEY(`userId`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`achievementId`) REFERENCES `achievements`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "achievementId",
            "columnName": "achievementId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayOrder",
            "columnName": "displayOrder",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_user_displayed_achievements_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_user_displayed_achievements_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_user_displayed_achievements_achievementId",
            "unique": false,
            "columnNames": [
              "achievementId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_user_displayed_achievements_achievementId` ON `${TABLE_NAME}` (`achievementId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "achievements",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "achievementId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "posts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`postId` TEXT NOT NULL, `userId` TEXT NOT NULL, `title` TEXT NOT NULL, `content` TEXT NOT NULL, `viewCount` INTEGER NOT NULL, `likeCount` INTEGER NOT NULL, `commentCount` INTEGER NOT NULL, `isTop` INTEGER NOT NULL, `status` TEXT NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, `sync_status` TEXT NOT NULL, PRIMARY KEY(`postId`))",
        "fields": [
          {
            "fieldPath": "postId",
            "columnName": "postId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "viewCount",
            "columnName": "viewCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "likeCount",
            "columnName": "likeCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentCount",
            "columnName": "commentCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isTop",
            "columnName": "isTop",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "syncStatus",
            "columnName": "sync_status",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "postId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "post_images",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `postId` TEXT NOT NULL, `imageUrl` TEXT NOT NULL, `orderIndex` INTEGER NOT NULL, FOREIGN KEY(`postId`) REFERENCES `posts`(`postId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "postId",
            "columnName": "postId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "imageUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "orderIndex",
            "columnName": "orderIndex",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_post_images_postId",
            "unique": false,
            "columnNames": [
              "postId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_post_images_postId` ON `${TABLE_NAME}` (`postId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "posts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "postId"
            ],
            "referencedColumns": [
              "postId"
            ]
          }
        ]
      },
      {
        "tableName": "post_tags",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `postId` TEXT NOT NULL, `tag` TEXT NOT NULL, FOREIGN KEY(`postId`) REFERENCES `posts`(`postId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "postId",
            "columnName": "postId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tag",
            "columnName": "tag",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_post_tags_postId",
            "unique": false,
            "columnNames": [
              "postId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_post_tags_postId` ON `${TABLE_NAME}` (`postId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "posts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "postId"
            ],
            "referencedColumns": [
              "postId"
            ]
          }
        ]
      },
      {
        "tableName": "post_likes",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `postId` TEXT NOT NULL, `userId` TEXT NOT NULL, `created_at` INTEGER NOT NULL, FOREIGN KEY(`postId`) REFERENCES `posts`(`postId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "postId",
            "columnName": "postId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_post_likes_postId",
            "unique": false,
            "columnNames": [
              "postId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_post_likes_postId` ON `${TABLE_NAME}` (`postId`)"
          },
          {
            "name": "index_post_likes_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_post_likes_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "posts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "postId"
            ],
            "referencedColumns": [
              "postId"
            ]
          }
        ]
      },
      {
        "tableName": "comments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`commentId` TEXT NOT NULL, `postId` TEXT NOT NULL, `userId` TEXT NOT NULL, `content` TEXT NOT NULL, `likeCount` INTEGER NOT NULL, `parentId` TEXT, `status` TEXT NOT NULL, `created_at` INTEGER NOT NULL, `sync_status` TEXT NOT NULL, `updatedAt` INTEGER NOT NULL, PRIMARY KEY(`commentId`), FOREIGN KEY(`postId`) REFERENCES `posts`(`postId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "commentId",
            "columnName": "commentId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "postId",
            "columnName": "postId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "likeCount",
            "columnName": "likeCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parentId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "syncStatus",
            "columnName": "sync_status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "commentId"
          ]
        },
        "indices": [
          {
            "name": "index_comments_postId",
            "unique": false,
            "columnNames": [
              "postId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_comments_postId` ON `${TABLE_NAME}` (`postId`)"
          },
          {
            "name": "index_comments_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_comments_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "posts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "postId"
            ],
            "referencedColumns": [
              "postId"
            ]
          }
        ]
      },
      {
        "tableName": "comment_likes",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `commentId` TEXT NOT NULL, `userId` TEXT NOT NULL, `created_at` INTEGER NOT NULL, FOREIGN KEY(`commentId`) REFERENCES `comments`(`commentId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentId",
            "columnName": "commentId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_comment_likes_commentId",
            "unique": false,
            "columnNames": [
              "commentId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_comment_likes_commentId` ON `${TABLE_NAME}` (`commentId`)"
          },
          {
            "name": "index_comment_likes_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_comment_likes_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "comments",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "commentId"
            ],
            "referencedColumns": [
              "commentId"
            ]
          }
        ]
      },
      {
        "tableName": "planned_route",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `userId` TEXT NOT NULL, `startName` TEXT NOT NULL, `startLatitude` REAL NOT NULL, `startLongitude` REAL NOT NULL, `endName` TEXT NOT NULL, `endLatitude` REAL NOT NULL, `endLongitude` REAL NOT NULL, `distance` INTEGER NOT NULL, `duration` INTEGER NOT NULL, `routeData` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `isFavorite` INTEGER NOT NULL, FOREIGN KEY(`userId`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "_id",
            "columnName": "_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "startName",
            "columnName": "startName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "startLatitude",
            "columnName": "startLatitude",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "startLongitude",
            "columnName": "startLongitude",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "endName",
            "columnName": "endName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "endLatitude",
            "columnName": "endLatitude",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "endLongitude",
            "columnName": "endLongitude",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "distance",
            "columnName": "distance",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "routeData",
            "columnName": "routeData",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFavorite",
            "columnName": "isFavorite",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "_id"
          ]
        },
        "indices": [
          {
            "name": "index_planned_route_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_planned_route_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "user_explored_region",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `userId` TEXT NOT NULL, `regionCode` TEXT NOT NULL, `firstExploredTime` INTEGER NOT NULL, `lastExploredTime` INTEGER NOT NULL, `exploredCount` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "regionCode",
            "columnName": "regionCode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "firstExploredTime",
            "columnName": "firstExploredTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastExploredTime",
            "columnName": "lastExploredTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "exploredCount",
            "columnName": "exploredCount",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '4f8e783e18fdd70a3d75e06aa4fc6e1e')"
    ]
  }
}